// 프로미스 Promise는 자바스크립트에서 "비동기적인 동작"을 잘 처리할 수 있게 해준다.
// 대기 중인 프라미스는 데이터가 도착하기 "전의 상태"를 표현한다.
// .then()이라는 함수를 대기 중인 프라미스에 "연쇄 "호출해야 한다.
// 이 함수는 콜백 함수를 인수로 받으며, 바로 앞에 있는 연산(프라미스)이 성공하면 콜백이 호출된다.
// fetch()는 데이터를 받아오고, then()은 데이터가 도착하면 그 데이터를 가지고 다른 일을 한다.
// then은 프라미스가 정상적으로 완료되면 "콜백 함수"를 한 번만 호출한다.
// 이 콜백 함수가 반환하는 값은 그다음에 오는 then 함수의 콜백에 전달되는 "인자"가 된다.
// 따라서 성공적으로 처리된 프라미스를 처리하기 위해 then 함수를 연쇄적으로 호출할 수 있다.

fetch('https://api.randomuser.me/?nat=US&results=1')
  .then((res) => res.json())
  .then((json) => json.results)
  .then(console.log)
  .catch(console.error);

// fetch를 호출해 randomuser.me에 대한 GET 요청을 보낸다.
// 요청이 성공하면 응답 본문을 JSON으로 변환한다.
// 그 후 JSON 데이터 중에서 results를 얻는다.
// 그 후 콘솔에 results의 값을 출력한다.
// 마지막에 있는 catch 함수는 fetch가 성공하지 못한 경우 콜백을 호출해준다.
